import gradio as gr
import subprocess

def launch_training(grad_accu_steps, lr, weight_decay,batch_size, epochs, predict_type, learn_sigma, 
                    mse_loss_weight_type, beta_start, beta_end, ckpt_every, ckpt_latest_every, max_training_steps, use_fp16, use_ema, 
                    extra_fp16, gc_interval, resume, training_parts, zero_stage, image_size, multireso, uncond_p, uncond_p_t5, text_len, text_len_t5, 
                    warmup_min_lr, warmup_num_steps, target_modules, index_file, random_flip, reso_step, rope_img, rope_real):
    
    command = [
        "accelerate", "launch", "./train_hunyuanDit_cn.py",
        "--grad_accu_steps", str(grad_accu_steps),
        "--lr", str(lr),
        "--weight_decay", str(weight_decay),
        "--batch_size", str(batch_size),
        "--epochs", str(epochs),
        "--predict_type", predict_type,
        "--learn_sigma", str(learn_sigma),
        "--mse_loss_weight_type", mse_loss_weight_type,
        "--beta_start", str(beta_start),
        "--beta_end", str(beta_end),
        "--ckpt_every", str(ckpt_every),
        "--ckpt_latest_every", str(ckpt_latest_every),
        "--max_training_steps", str(max_training_steps),
        "--use_fp16", str(use_fp16),
        "--use_ema", str(use_ema),
        "--extra_fp16", str(extra_fp16),
        "--gc_interval", str(gc_interval),
        "--resume", str(resume),
        "--training_parts", training_parts,
        "--zero_stage", str(zero_stage),
        "--image_size", str(image_size),
        "--multireso", str(multireso),
        "--uncond_p", str(uncond_p),
        "--uncond_p_t5", str(uncond_p_t5),
        "--text_len", str(text_len),
        "--text_len_t5", str(text_len_t5),
        "--warmup_min_lr", str(warmup_min_lr),
        "--warmup_num_steps", str(warmup_num_steps),
        "--target_modules", target_modules,
        "--index_file", index_file,
        "--random_flip", str(random_flip),
        "--reso_step", str(reso_step),
        "--rope_img", rope_img,
        "--rope_real", str(rope_real),
    ]
    command = [arg for arg in command if arg != '']  
    subprocess.run(command, check=True)
    return "训练已启动，参数已经传递。"

hunyuancn = gr.Interface(
    fn=launch_training,
    inputs = [
        gr.Number(label="梯度累积步数 Grad Accumulation Steps", value=1),
        gr.Number(label="学习率 Learning Rate", value=0.0001),
        gr.Number(label="权重衰减率 Weight Decay", value=0.01),
        gr.Number(label="批量大小 batch size", value=1),
        gr.Number(label="训练轮数 Epochs", value=10),
        gr.Textbox(label="预测类型 Predict Type", value="epsilon"),
        gr.Checkbox(label="学习噪声方差 Learn Sigma"),
        gr.Textbox(label="均方误差权重类型 MSE Loss Weight Type", value="uniform"),
        gr.Number(label="贝塔开始值 Beta Start", value=0.1),
        gr.Number(label="贝塔结束值 Beta End", value=0.2),
        gr.Number(label="每多少步保存检查点 Checkpoint Every Steps", value=1000),
        gr.Number(label="保存最新检查点频率 Latest Checkpoint Every Steps", value=5000),
        gr.Number(label="最大训练步数 Max Training Steps", value=100000),
        gr.Checkbox(label="使用FP16进行训练 Use FP16"),
        gr.Checkbox(label="使用EMA模型 Use EMA"),
        gr.Checkbox(label="在额外模块中使用FP16 Extra FP16"),
        gr.Number(label="垃圾回收间隔 GC Interval", value=1000),
        gr.Checkbox(label="恢复训练 Resume Training"),
        gr.Textbox(label="训练部分 Training Parts", value="all"),
        gr.Number(label="模型并行训练的优化水平 Zero Stage", value=1),
        gr.Number(label="输入图像的大小，通常为方形尺寸，必须是8的倍数 image_size", value=1),
        gr.Checkbox(label="启用多分辨率训练 Multi-Resolution Training"),
        gr.Number(label="无条件概率 Unconditional Probability", value=0.1),
        gr.Number(label="T5无条件概率 T5 Unconditional Probability", value=0.1),
        gr.Number(label="文本上下文长度 Text Context Length", value=77),
        gr.Number(label="T5文本上下文长度 T5 Text Context Length", value=77),
        gr.Number(label="预热最小学习率 Warmup Min LR", value=1e-6),
        gr.Number(label="预热步数 Warmup Steps", value=1000),
        gr.Textbox(label="目标模块 Target Modules", value=""),
        gr.Textbox(label="数据索引文件 Index File"),
        gr.Checkbox(label="随机翻转 Random Flip"),
        gr.Number(label="分辨率步进 Reso Step", value=64),
        gr.Textbox(label="图像位置嵌入初始化 RoPE Image"),
        gr.Checkbox(label="真实场景位置嵌入 RoPE Real"),
    ],
    outputs="text",
    title="hunyuandit_controlnet模型训练",
    submit_btn="开始训练",
    clear_btn="清空参数",
    allow_flagging='never', 
    description="训练hunyuandit_controlnet模型。该模型的利用Arrow作为训练数据格式，与SDXL完全不同，这一部分还整整理开发中。"
)